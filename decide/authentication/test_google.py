# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from django.test import TestCase
from django.contrib.staticfiles.testing import StaticLiveServerTestCase
from django.contrib.auth.models import User
from base.tests import BaseTestCase
import itertools
import time
from voting.models import Voting, Question, QuestionOption, QuestionOrder
from django.conf import settings
from mixnet.models import Auth
from django.utils import timezone
import logging

class TestGoogle(StaticLiveServerTestCase):
    
    
    def create_voting(self):
        self.q = Question(desc='Prueba votación')
        self.q.save()
        for i in range(2):
            opt = QuestionOption(question=self.q, option='Opción {}'.format(i+1))
            opt.save()
        self.v= Voting(name='Prueba votación', question=self.q, link="prueba")
        self.v.save()
        self.a, _ = Auth.objects.get_or_create(url=settings.BASEURL,defaults={'me': True, 'name': 'test auth'})
        self.a.save()
        self.v.auths.add(self.a)
        self.v.create_pubkey()
        self.v.start_date = timezone.now()
        self.v.save()
        

    def setUp(self):

        self.base = BaseTestCase()
        self.base.setUp()

        self.vars = {}
        self.create_voting()
        options = webdriver.ChromeOptions()
        options.headless = True
        self.driver = webdriver.Chrome(options=options)

        super().setUp()

    def tearDown(self):
        super().tearDown()
        self.driver.quit()
        self.base.tearDown()
        self.v.delete()
  
    def test_google(self):
        self.driver.get(f'{self.live_server_url}/booth/{self.v.pk}')
        assert self.driver.find_element(By.CSS_SELECTOR, ".voting > h1").text == f"{self.v.pk} - Prueba votación"
        self.driver.find_element(By.LINK_TEXT, "Iniciar sesión con Google").click()
        
        #introducir usuario mal
        self.driver.find_element(By.ID, "identifierId").send_keys("test")
        self.driver.find_element(By.ID, "identifierId").send_keys(Keys.ENTER)
        #introducir usuario bien
        self.driver.find_element(By.ID, "identifierId").send_keys("usuario bueno@gmail.com")
        self.driver.find_element(By.ID, "identifierId").send_keys(Keys.ENTER)
              
        #introducir contrasenya mal        
        self.driver.find_element(By.ID, "identifierId").send_keys("test")
        self.driver.find_element(By.ID, "identifierId").send_keys(Keys.ENTER)
        #introducir contrasenya bien  
        self.driver.find_element(By.NAME, "password").send_keys("contraseña buena")
        self.driver.find_element(By.NAME, "password").send_keys(Keys.ENTER)
  
