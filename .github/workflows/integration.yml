name: Python application

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo
        env:
          MONGO_INITDB_DATABASE: decide
        ports:
          - 27017:27017
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd mongo --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.12
      - name: psycopg2 prerequisites
        run: sudo apt-get install libpq-dev
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install codacy-coverage
      - name: Run migrations
        run: cd decide;python manage.py makemigrations;python manage.py migrate
      - name: Run tests
        run: cd decide;coverage run --branch --source=. ./manage.py test --settings=decide.test_settings --keepdb; coverage xml;
      - name: Codacy Coverage Reporter
        uses: codacy/codacy-coverage-reporter-action@v1.1.0
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: decide/coverage.xml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "decide-full-tortuga-almacena"
          heroku_email: "javikuka7@gmail.com"

  e2e:
  needs: build
  runs-on: ubuntu-16.04
  steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: "16"
      - name: Install Dependencies
        run: cd decide_panel && npm install
      - name: Run Cypress
        uses: cypress-io/github-action@v2
        with:
          start: cd decide && python manage.py runserver --settings=decide.test_settings && cd ../decide_panel && npm start
